#!/usr/bin/python3

import os, sys, argparse, re
from collections import OrderedDict

def int2roman(num):
    roman = OrderedDict()
    roman[1000] = "M"
    roman[900] = "CM"
    roman[500] = "D"
    roman[400] = "CD"
    roman[100] = "C"
    roman[90] = "XC"
    roman[50] = "L"
    roman[40] = "XL"
    roman[10] = "X"
    roman[9] = "IX"
    roman[5] = "V"
    roman[4] = "IV"
    roman[1] = "I"

    def roman_num(num):
        for r in roman.keys():
            x, y = divmod(num, r)
            yield roman[r] * x
            num -= (r * x)
            if num > 0:
                roman_num(num)
            else:
                break

    return "".join([a for a in roman_num(num)])

if __name__ == "__main__":
    ap = argparse.ArgumentParser(description="Integer to Roman numeral")
    ap.add_argument("number", help="Integer", type=int)
    args = ap.parse_args()
    if args.number < 1 or args.number > 3999:
        print("ERROR: Number must be in range 1..3999")
        sys.exit(1)
    print(int2roman(args.number))
